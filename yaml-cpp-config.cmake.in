@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Include the exported targets
include("${CMAKE_CURRENT_LIST_DIR}/yaml-cpp-targets.cmake")

# For backwards compatibility, set these variables
# (Modern CMake users should use the yaml-cpp::yaml-cpp target directly)
set_and_check(YAML_CPP_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set_and_check(YAML_CPP_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set(YAML_CPP_SHARED_LIBS_BUILT @YAML_BUILD_SHARED_LIBS@)
set(YAML_CPP_LIBRARIES yaml-cpp::yaml-cpp)

# Deprecated compatibility target
# (Remove this block in a future version)
if(NOT TARGET yaml-cpp)
  add_library(yaml-cpp INTERFACE IMPORTED) 
  target_link_libraries(yaml-cpp INTERFACE yaml-cpp::yaml-cpp) 
  if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.17)
    set_target_properties(yaml-cpp PROPERTIES 
      DEPRECATION "The target yaml-cpp is deprecated and will be removed in version 0.10.0. Use the yaml-cpp::yaml-cpp target instead."
    )
  endif()
endif()

check_required_components(@PROJECT_NAME@)